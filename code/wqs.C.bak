#include "TFile.h"
#include "TROOT.h"
#include "TH1F.h"
#include "TString.h"
#include "TLegend.h"
#include <iostream>

void wqs(){
	//Luminositaeten
	double L[7];
	L[0]=675.8590;
	L[1]=543.6270;
	L[2]=419.7760;
	L[3]=3122.204;
	L[4]=639.8380;
	L[5]=479.2400;
	L[6]=766.8380;
	//Schwerpunktsenergien
	double S[7]={88.48021,89.47158,90.22720,91.23223,91.97109,92.97091,93.71841};
	
	//Eventnamen
	
	TString names[4]={"ee","mm","TT","qq"};
	//Anzahl Ereignisse nach Schnitt,
	//sortiert nach Schwerpunktsenergie
	TMatrixD N(4,7);
	//e-events
	N(0,0)=908;
	N(0,1)=823;
	N(0,2)=719;
	N(0,3)=6442;
	N(0,4)=981;
	N(0,5)=484;
	N(0,6)=713;
	//m-events
	N(1,0)=137;
	N(1,1)=242;
	N(1,2)=332;
	N(1,3)=3905;
	N(1,4)=691;
	N(1,5)=269;
	N(1,6)=329;
	//t-events
	N(2,0)=158;
	N(2,1)=222;
	N(2,2)=277;
	N(2,3)=3735;
	N(2,4)=619;
	N(2,5)=280;
	N(2,6)=303;
	//q-events
	N(3,0)=3528;
	N(3,1)=5322;
	N(3,2)=7542;
	N(3,3)=92764;
	N(3,4)=15294;
	N(3,5)=6643;
	N(3,6)=7419;
	//invertierte effizienzmatrizen
	double ineps_a[7][4][4]= {
{{6.66744, -0.0011926, -0.0217645, -0.000351702},
{0.00176738, 1.10921, -0.0292075, 0.000190661},
{-0.0716601, -0.00735681, 1.08784, -0.00754298},
{-0.00228136, 4.45085e-007, -0.00167583, 1.01042}
},
{{4.4717, -0.000799849, -0.0145969, -0.000235878},
{0.00118534, 1.10921, -0.0292056, 0.000190692},
{-0.0480608, -0.00736103, 1.08777, -0.00754422},
{-0.00153005, 3.107e-007, -0.00167828, 1.01042}
},
{{3.48836, -0.000623959, -0.011387, -0.000184008},
{0.000924678, 1.10921, -0.0292048, 0.000190705},
{-0.037492, -0.00736292, 1.08773, -0.00754478},
{-0.00119359, 2.50517e-007, -0.00167938, 1.01042}
},
{{2.93088, -0.000524243, -0.00956724, -0.000154601},
{0.000776904, 1.10921, -0.0292043, 0.000190713},
{-0.0315004, -0.00736399, 1.08771, -0.0075451},
{-0.00100284, 2.16398e-007, -0.00168, 1.01042}
},
{{3.00002, -0.000536611, -0.00979295, -0.000158249},
{0.000795233, 1.10921, -0.0292043, 0.000190712},
{-0.0322435, -0.00736386, 1.08771, -0.00754506},
{-0.0010265, 2.2063e-007, -0.00167993, 1.01042}
},
{{3.09297, -0.000553237, -0.0100964, -0.000163152},
{0.000819871, 1.10921, -0.0292044, 0.000190711},
{-0.0332425, -0.00736368, 1.08772, -0.00754501},
{-0.0010583, 2.26319e-007, -0.00167982, 1.01042}
},
{{3.5247, -0.00063046, -0.0115057, -0.000185925},
{0.000934313, 1.10921, -0.0292048, 0.000190705},
{-0.0378827, -0.00736285, 1.08773, -0.00754476},
{-0.00120602, 2.52742e-007, -0.00167934, 1.01042}
}
	};1
	TMatrixD ineps(4,4);
	
	//Graphen
	TGraph *dat[4];
	//Graphen Namen
	
	//tats√§chliche Ereignisse, Multiplikation mit ineps
	TMatrixD Nk(4,7);
	cout<< "Vor korrektur"<<endl;
	N.Print();
	double wq[7];
	cout << "Anzahl Ereignisse" << endl;
	for(int i=0; i<4;i++){
		for(int j=0; j<7;j++){
			//richtige inverse matrix benutzen
			for(int l=0; l<4;l++){
				for(int m=0; m<4; m++){
					ineps(l,m)=ineps_a[j][l][m];
					}
				}
			Nk=ineps*N;
			wq[j]=Nk(i,j)/L[j];
			cout << Nk(i,j)<<" | "<<wq[j]<<endl;}
		dat[i]= new TGraph(7,S,wq);
		dat[i]->SetMarkerSize(1.5);
		dat[i]->SetMarkerStyle(21);
		TCanvas* c = new TCanvas("c", "c");
		dat[i]->Draw("AP");
		c->SaveAs("WQ "+names[i]+".png");
		c->Close();
		}
}